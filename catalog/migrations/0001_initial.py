# Generated by Django 3.1.7 on 2021-07-12 10:24

import catalog.models.models
import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttributesGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('sort_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='the title of the continent', max_length=64, verbose_name='title')),
                ('title_en', models.CharField(help_text='the title of the continent', max_length=64, null=True, verbose_name='title')),
                ('title_ar', models.CharField(help_text='the title of the continent', max_length=64, null=True, verbose_name='title')),
                ('keywords', models.CharField(max_length=255)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('image', models.ImageField(blank=True, upload_to='images/category/%Y/%m/%d')),
                ('status', models.CharField(choices=[('True', 'Yes'), ('False', 'NO')], max_length=10)),
                ('slug', models.SlugField(max_length=128, unique=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='catalog.categories')),
            ],
            options={
                'verbose_name': 'category',
            },
        ),
        migrations.CreateModel(
            name='FiltersGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('image', models.ImageField(default='images/Manufacturer/en-gb.png', null=True, upload_to='images/Manufacturer/%Y/')),
                ('sort_order', models.IntegerField(default=0)),
                ('slug', models.SlugField(null=models.CharField(max_length=100, unique=True), unique=True)),
                ('status', models.CharField(choices=[('True', 'Yes'), ('False', 'NO')], max_length=10)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OptionsType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductReviews',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('review_image', models.FileField(upload_to='')),
                ('rating', models.CharField(default='5', max_length=255)),
                ('review', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('True', 'Yes'), ('False', 'NO')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=65)),
                ('model', models.CharField(max_length=65, null=True)),
                ('brand', models.CharField(max_length=255, null=True)),
                ('price', models.CharField(max_length=255)),
                ('quantity', models.CharField(default=0, max_length=255)),
                ('minimum_quantity', models.CharField(default=1, max_length=255)),
                ('subtract_stock', models.CharField(choices=[('True', 'Yes'), ('False', 'NO')], default='Enable', max_length=255, null=True)),
                ('out_of_stock_status', models.CharField(choices=[('1', '2-3 Day'), ('2', 'In Stock'), ('3', 'Out Stock'), ('4', 'Pre-order')], default='2', max_length=255)),
                ('requires_shipping', models.BooleanField(default=False, null=True)),
                ('weight', models.IntegerField(blank=True, default=0, null=True)),
                ('length', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.CharField(choices=[('True', 'Yes'), ('False', 'NO')], default='Yes', max_length=10, null=True)),
                ('sort_order', models.BooleanField(default=0, null=True)),
                ('slug', models.SlugField(max_length=128, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.categories')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariantItems',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.products')),
                ('product_variant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.productvariant')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTransaction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_product_count', models.IntegerField(default=1)),
                ('transaction_type', models.CharField(choices=[(1, 'BUY'), (2, 'SELL')], max_length=255)),
                ('transaction_description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.products')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTags',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('meta_title', models.CharField(max_length=255, verbose_name='Meta Tag Title')),
                ('meta_description', models.CharField(max_length=255)),
                ('meta_keywords', models.CharField(max_length=255)),
                ('tags', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('True', 'Yes'), ('False', 'NO')], max_length=10)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.products')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReviewVoting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('True', 'Yes'), ('False', 'NO')], max_length=10)),
                ('product_review_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.productreviews')),
                ('user_id_voting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='productreviews',
            name='product_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.products'),
        ),
        migrations.AddField(
            model_name='productreviews',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ProductQuestions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('True', 'Yes'), ('False', 'NO')], max_length=10)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.products')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductMedia',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('media_type', models.CharField(max_length=255)),
                ('media_content', models.FileField(upload_to=catalog.models.models.image_directory_path, verbose_name='Store Logo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.IntegerField(default=1)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.products')),
            ],
        ),
        migrations.CreateModel(
            name='ProductDiscount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('discount_title', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('priority', models.CharField(blank=True, max_length=255, null=True)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('data_start', models.DateTimeField(blank=True, null=True)),
                ('data_end', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.products')),
            ],
        ),
        migrations.CreateModel(
            name='Filters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('filter_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.filtersgroup')),
            ],
        ),
        migrations.CreateModel(
            name='Attributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('attributes_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.attributesgroup')),
            ],
        ),
    ]
